# Source this file
bind-key ! source-file $HOME/.tmux.conf \; display '~/.tmux.conf sourced'

# Key bindings from screen
set-option -g prefix C-a
unbind-key C-b
bind-key a send-prefix
bind-key C-a last-window
unbind-key A
bind-key A command-prompt "rename-window %%"
unbind-key ^C
bind-key ^C new-window
unbind-key ^D
bind-key ^D detach
unbind-key ^N
bind-key ^N next-window
unbind-key ^P
bind-key ^P previous-window
unbind-key c
bind-key c new-window
unbind-key n
bind-key n next-window
unbind-key p
bind-key p previous-window

# Splits
bind-key v split-window -h -c "#{pane_current_path}"
bind-key h split-window -v -c "#{pane_current_path}"

# Resize
bind-key -r C-j resize-pane -D 1
bind-key -r C-k resize-pane -U 1
bind-key -r C-h resize-pane -L 5
bind-key -r C-l resize-pane -R 5
bind-key C-z resize-pane -Z

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n C-j if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n C-k if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n C-l if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }
bind-key -T copy-mode-vi C-h                           if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi C-j                           if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi C-k                           if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi C-l                           if-shell -F '#{pane_at_right}'  {} { select-pane -R }

%hidden COLOR_ACTIVE_BG=color6
%hidden COLOR_ACTIVE_FG=color117
%hidden COLOR_ACTIVITY_FG=color3
%hidden COLOR_BELL_FG=color9
%hidden COLOR_BG=color234
%hidden COLOR_FG=color244

# Select window with alt-number
set-option -g base-index 1
set-option -g pane-base-index 1
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

#
set-option -g allow-rename
set-option -g default-terminal "screen-256color"
set-option -g escape-time 1
set-option -g history-limit 1000000
set-option -g monitor-activity on
set-option -g mouse off

# Status bar
set-option -g status on
set-option -g status-bg ${COLOR_BG}
set-option -g status-fg ${COLOR_FG}
set-option -g status-interval 1
set-option -g status-interval 1
set-option -g status-justify centre
set-option -g status-left "#{?client_prefix,#[fg=${COLOR_E}]#[bg=${COLOR_ACTIVE_BG}],#[fg=${COLOR_BG}]#[bg=${COLOR_FG}]} #S #{?client_prefix,#[fg=${COLOR_ACTIVE_BG}],#[fg=${COLOR_FG}]}#[bg=${COLOR_BG}] #H"
set-option -g status-left-length 20
set-option -g status-right '%Y-%m-%d %H:%M:%S'
set-option -g window-status-activity-style fg=${COLOR_ACTIVITY_FG}
set-option -g window-status-bell-style fg=${COLOR_BELL_FG}
set-option -g window-status-current-format "#[fg=${COLOR_BG},bg=${COLOR_ACTIVE_BG}]#[fg=${COLOR_ACTIVE_FG},bg=${COLOR_ACTIVE_BG}] #I  #W #[fg=${COLOR_ACTIVE_BG},bg=${COLOR_BG}]"
set-option -g window-status-format '#I  #W '
